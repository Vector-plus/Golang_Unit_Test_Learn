// Code generated by MockGen. DO NOT EDIT.
// Source: ../example/AE.go

// Package mockytest is a generated GoMock package.
package mockytest

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIA is a mock of IA interface.
type MockIA struct {
	ctrl     *gomock.Controller
	recorder *MockIAMockRecorder
}

// MockIAMockRecorder is the mock recorder for MockIA.
type MockIAMockRecorder struct {
	mock *MockIA
}

// NewMockIA creates a new mock instance.
func NewMockIA(ctrl *gomock.Controller) *MockIA {
	mock := &MockIA{ctrl: ctrl}
	mock.recorder = &MockIAMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIA) EXPECT() *MockIAMockRecorder {
	return m.recorder
}

// FA mocks base method.
func (m *MockIA) FA(msg string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FA", msg)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FA indicates an expected call of FA.
func (mr *MockIAMockRecorder) FA(msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FA", reflect.TypeOf((*MockIA)(nil).FA), msg)
}

// FB mocks base method.
func (m *MockIA) FB(n int) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FB", n)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FB indicates an expected call of FB.
func (mr *MockIAMockRecorder) FB(n interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FB", reflect.TypeOf((*MockIA)(nil).FB), n)
}
